import time
import requests
import yfinance as yf
import pytz
from datetime import datetime

TG_TOKEN = "8094752756:AAFUdZn4XFlHiZOtV-TXzMOhYFlXKCFVoEs"
TG_CHAT_ID = "5556108366"

PAIRS = [
    "EURUSD=X", "GBPUSD=X", "USDJPY=X", "USDCHF=X", "AUDUSD=X",
    "NZDUSD=X", "USDCAD=X", "EURGBP=X", "EURJPY=X", "GBPJPY=X"
]

astana_tz = pytz.timezone("Asia/Almaty")

def is_trading_time():
    now = datetime.now(astana_tz)
    return 6 <= now.hour < 22

def send_telegram(msg):
    url = f"https://api.telegram.org/bot{TG_TOKEN}/sendMessage"
    data = {"chat_id": TG_CHAT_ID, "text": msg, "parse_mode": "HTML"}
    try:
        requests.post(url, data=data)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Telegram:", e)

def analyze_pair(pair):
    data = yf.download(pair, period="2d", interval="15m", progress=False)
    if data.empty or len(data) < 4:
        return None

    volume_now = data["Volume"].iloc[-1]
    volume_avg = data["Volume"].rolling(5).mean().iloc[-1]
    volume_signal = "üî• –í—ã—Å–æ–∫–∏–π –æ–±—ä—ë–º" if volume_now > volume_avg * 1.2 else "üìâ –°—Ä–µ–¥–Ω–∏–π –æ–±—ä—ë–º"

    last = data.iloc[-1]
    prev = data.iloc[-2]
    candle_signal = "üöÄ –ë—ã—á–∏–π" if last["Close"] > last["Open"] and prev["Close"] < prev["Open"] else \
                    "üêª –ú–µ–¥–≤–µ–∂–∏–π" if last["Close"] < last["Open"] and prev["Close"] > prev["Open"] else "‚ùå –ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞"

    change = abs(data["Close"].pct_change().iloc[-1])
    confidence = round(change * 100, 2)
    price = round(last["Close"], 5)
    duration = 5 if confidence < 0.5 else 15

    if candle_signal == "‚ùå –ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞" or confidence < 0.15:
        return None

    return {
        "pair": pair.replace("=X", ""),
        "price": price,
        "volume": volume_signal,
        "candle": candle_signal,
        "confidence": confidence,
        "duration": duration
    }

def main():
    send_telegram("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—ã–Ω–æ–∫...")

    while True:
        if is_trading_time():
            for pair in PAIRS:
                result = analyze_pair(pair)
                if result:
                    msg = (
                        f"üì° <b>–°–∏–≥–Ω–∞–ª</b> –Ω–∞ <b>{result['pair']}</b>\n"
                        f"üí∞ –¶–µ–Ω–∞: {result['price']}\n"
                        f"üïØ –°–≤–µ—á–∏: {result['candle']}\n"
                        f"üìä –û–±—ä—ë–º: {result['volume']}\n"
                        f"üìà –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']}%\n"
                        f"‚è± –°–¥–µ–ª–∫–∞ –Ω–∞: {result['duration']} –º–∏–Ω\n"
                        f"üß† –°—Ç—Ä–∞—Ç–µ–≥–∏—è: Smoke FX / Smart Money"
                    )
                    send_telegram(msg)
                else:
                    print(f"{pair} ‚Äî —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ—Ç")
        else:
            print("‚è≥ –í–Ω–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ê—Å—Ç–∞–Ω–∞)")
        time.sleep(60)

if __name__ == "__main__":
    main()
